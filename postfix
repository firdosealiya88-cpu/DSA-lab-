#include <stdio.h>
#include <stdlib.h>
#include<ctype.h>
#include<math.h>
#define SIZE 50
struct stack
{
    int top;
    float data[SIZE];
};
typedef struct stack STACK;
void push (STACK*s,float item)
{
    s->data[++(s->top)]=item;
}
float pop (STACK*s)
{
    return s->data[(s->top)--];
}
float compute (float opr1,char symbol,float opr2)
{
    switch (symbol)
    {
   case'+':
    return opr1+opr2;
   case'-':
    return opr1-opr2;
   case'*':
    return opr1*opr2;
   case'/':
    return opr1/opr2;
   case'^':
    return pow(opr1,opr2);
    }
}
float evalpostfix(STACK*s,char postfix[])
{
    float opr1,opr2,result;
    int i;
    char symbol;
    for(i=0;postfix[i]!='\0';i++)
    {
        symbol=postfix[i];
        if(isdigit(symbol))
        {
            push(s,(float)(symbol-'0'));
        }
        else
        {
            opr2=pop(s);
            opr1=pop(s);
            result=compute(opr1,symbol,opr2);
            push(s,result);
        }
    }
    return pop(s);

}
int main()
{
    char postfix[20];
    STACK s;
    s.top=-1;
float result;
printf("read postfix exspression:");
scanf("%s",postfix);
result=evalpostfix(&s,postfix);
printf("the final result is%f/n",result);
return 0;
}
